--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (3==v0) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;function v16(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v39)if (v2(v39,2)==79) then local v77=0;while true do if (v77==0) then v28=v1(v4(v39,1,1));return "";end end else local v78=v3(v1(v39,16));if v28 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v6(v78,v28);v28=nil;v91=1;end end else return v78;end end end);local function v29(v40,v41,v42)if v42 then local v79=642 -(208 + 434) ;local v80;while true do if (v79==((0 + 0) -0)) then v80=(v40/((1 + 1)^(v41-(2 -1))))%((2 + 0)^(((v42-(2 -1)) -(v41-(68 -(12 + 55)))) + (2 -1))) ;return v80-(v80%1) ;end end else local v81=1128 -(310 + 818) ;local v82;while true do if (v81==(165 -(28 + 137))) then v82=(1089 -(1055 + 32))^(v41-1) ;return (((v40%(v82 + v82))>=v82) and (1429 -((1207 -(633 + 72)) + 926))) or (0 + 0) ;end end end end local function v30()local v47=1705 -(1516 + 189) ;local v48;while true do if (v47==(3 -(2 -0))) then return v48;end if (v47==(1295 -(515 + 780))) then v48=v2(v25,v27,v27);v27=v27 + (2 -1) ;v47=1 + 0 ;end end end local function v31()local v49=0 + 0 ;local v50;local v51;while true do if (v49==(0 -0)) then v50,v51=v2(v25,v27,v27 + 1 + 1 );v27=v27 + 2 + (0 -0) ;v49=296 -(136 + 94 + 65) ;end if (v49==1) then return (v51 * 256) + v50 ;end end end local function v32()local v52,v53,v54,v55=v2(v25,v27,v27 + (8 -5) );v27=v27 + 4 ;return (v55 * 16777216) + (v54 * (16840 + 48696)) + (v53 * (103 + 153)) + v52 ;end local function v33()local v56=0 + 0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(3 -2)) then v59=(2706 -1579) -(463 + 663) ;v60=(v29(v58,1 -(0 -0) ,20) * ((1316 -(390 + 924))^(207 -(7 + 168)))) + v57 ;v56=2;end if (v56==(226 -(63 + 55 + 106))) then v61=v29(v58,21,31);v62=((v29(v58,7 + 9 + 16 )==((15 -11) -3)) and  -(34 -(23 + 10))) or 1 ;v56=(82 + 773) -(284 + 568) ;end if (v56==0) then v57=v32();v58=v32();v56=4 -3 ;end if ((2 + 1)==v56) then if (v61==((0 -0) -0)) then if (v60==(0 + (0 -0))) then return v62 * 0 ;else local v99=0 + 0 ;while true do if (v99==((0 -0) + 0)) then v61=1 + 0 ;v59=(0 -0) -0 ;break;end end end elseif (v61==(2471 -(14 + 410))) then return ((v60==(162 -(63 + 99))) and (v62 * ((1926 -(1226 + (1401 -(683 + 19))))/((95 + 97) -(52 + 140))))) or (v62 * NaN) ;end return v9(v62,v61-(924 + 99) ) * (v59 + (v60/((1834 -(1427 + 405))^(18 + 34)))) ;end end end local function v34(v43)local v63=0 -0 ;local v64;local v65;while true do if ((2 -0)==v63) then v65={};for v93=(134 -(94 + 39)) -0 , #v64 do v65[v93]=v3(v2(v4(v64,v93,v93)));end v63=3 + 0 ;end if (v63==1) then v64=v4(v25,v27,(v27 + v43) -(1 + 0) );v27=v27 + v43 ;v63=2;end if (v63==(0 + 0)) then v64=nil;if  not v43 then local v98=0 -0 ;while true do if (v98==(1703 -(1068 + 635))) then v43=v32();if (v43==(0 + 0)) then return "";end break;end end end v63=2 -1 ;end if (v63==(4 -(1 + 0))) then return v7(v65);end end end local v35=v32;local function v36(...)return {...},v13("#",...);end local function v37()local v66=0 -0 ;local v67;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v66==2) then local v89=0;while true do if (v89==(1 + 0)) then v66=3 -0 ;break;end if (v89==(0 + 0)) then v71=nil;v72=nil;v89=1;end end end if ((11 -8)==v66) then v73=nil;while true do local v95=0;local v96;local v97;while true do if (v95~=1) then else while true do if (v96~=(0 -0)) then else v97=0;while true do if (v97==1) then if (v67~=(1 + 0)) then else local v119=0 + 0 ;while true do if ((1825 -(269 + 1555))==v119) then for v128=1 + 0 ,v72 do local v129=0;local v130;local v131;local v132;local v133;local v134;while true do if (v129~=2) then else v134=nil;while true do if (v130==(22 -(18 + 4))) then v131=0 + 0 ;v132=nil;v130=1;end if (v130~=(1216 -(774 + 440))) then else while true do if (v131~=1) then else v134=nil;while true do if (v132~=1) then else if (v133==(2 -1)) then v134=v30()~=(482 -(131 + 351)) ;elseif (v133==(4 -2)) then v134=v33();elseif (v133==(1 + 2)) then v134=v34();end v73[v128]=v134;break;end if (v132==(0 + 0)) then local v261=0 + 0 ;while true do if (v261~=(871 -(487 + 383))) then else v132=2 -1 ;break;end if (v261==(0 + 0)) then local v320=0 + 0 ;local v321;while true do if (v320~=(1839 -(138 + 1701))) then else v321=0;while true do if (v321==(0 + 0)) then v133=v30();v134=nil;v321=1 + 0 ;end if (v321==1) then v261=1 -0 ;break;end end break;end end end end end end break;end if (v131==(132 -(66 + 66))) then v132=0 -0 ;v133=nil;v131=717 -(153 + 563) ;end end break;end if ((1 + 0)==v130) then local v144=119 -(106 + 13) ;while true do if (v144==0) then v133=nil;v134=nil;v144=1 -0 ;end if (v144==1) then v130=1 + 1 ;break;end end end end break;end if ((2 -1)~=v129) then else v132=nil;v133=nil;v129=1378 -(1082 + 294) ;end if (v129==(0 -0)) then v130=1768 -(1629 + 139) ;v131=nil;v129=1;end end end v71[3]=v30();v119=924 -(703 + 219) ;end if (v119==(0 -0)) then local v127=0 + 0 ;while true do if ((0 + 0)~=v127) then else local v136=0 + 0 ;while true do if ((2 -1)~=v136) then else v127=1885 -(1663 + 221) ;break;end if (v136==(1591 -(1012 + 579))) then v72=v32();v73={};v136=737 -(35 + 701) ;end end end if (v127==(1 + 0)) then v119=1;break;end end end if (v119==(2 + 0)) then v67=1 + 1 ;break;end end end break;end if (v97~=(0 -0)) then else if (v67==(1 + 1)) then local v120=0 + 0 ;local v121;while true do if (v120==(1658 -(1530 + 128))) then v121=0;while true do local v135=0 + 0 ;while true do if (v135==(1088 -(33 + 1055))) then if ((1222 -(321 + 901))==v121) then local v141=0 + 0 ;local v142;while true do if (v141~=(1819 -(768 + 1051))) then else v142=807 -(663 + 144) ;while true do if (v142==(182 -(42 + 140))) then local v257=0 + 0 ;while true do if (v257~=(1 -0)) then else v142=1;break;end if ((0 -0)==v257) then for v322=543 -(4 + 538) ,v32() do local v323=0 + 0 ;local v324;local v325;while true do if (v323==0) then v324=0 + 0 ;v325=nil;v323=1;end if (v323~=(1 + 0)) then else while true do if (v324~=(0 -0)) then else v325=v30();if (v29(v325,1,1)==(1856 -(286 + 1570))) then local v432=0;local v433;local v434;local v435;local v436;local v437;while true do if (v432==(0 + 0)) then v433=0 + 0 ;v434=nil;v432=1;end if (v432~=(1080 -(422 + 656))) then else v437=nil;while true do if (v433==(1669 -(159 + 1508))) then while true do if (v434==(49 -(18 + 28))) then if (v29(v436,1646 -(167 + 1476) ,7 -4 )~=(1884 -(1374 + 509))) then else v437[4]=v73[v437[13 -9 ]];end v68[v322]=v437;break;end if (v434==(1 + 0)) then local v485=0 + 0 ;while true do if (v485~=(2 -1)) then else v434=2;break;end if (v485~=(1572 -(940 + 632))) then else local v496=0 -0 ;local v497;while true do if (v496~=(0 -0)) then else v497=0 + 0 ;while true do if (v497==(1 + 0)) then v485=1 + 0 ;break;end if (v497==(0 + 0)) then v437={v31(),v31(),nil,nil};if (v435==(642 -(344 + 298))) then local v508=1945 -(986 + 959) ;local v509;local v510;while true do if (v508~=(1 + 0)) then else while true do if (v509==0) then v510=1990 -(1569 + 421) ;while true do if ((877 -(163 + 714))==v510) then v437[3]=v31();v437[4]=v31();break;end end break;end end break;end if (v508==(1219 -(705 + 514))) then v509=0 -0 ;v510=nil;v508=3 -2 ;end end elseif (v435==1) then v437[279 -(207 + 69) ]=v32();elseif (v435==2) then v437[4 -1 ]=v32() -((1 + 1)^16) ;elseif (v435~=3) then else local v518=0 + 0 ;while true do if (v518~=0) then else v437[1020 -(532 + 485) ]=v32() -((3 -1)^(482 -(384 + 82))) ;v437[2 + 2 ]=v31();break;end end end v497=1308 -(1294 + 13) ;end end break;end end end end end if (v434==2) then local v486=1808 -(962 + 846) ;local v487;while true do if (v486==(0 + 0)) then v487=0;while true do if (v487==(0 + 0)) then local v501=0 + 0 ;while true do if (0==v501) then local v504=1201 -(320 + 881) ;while true do if (v504~=(0 + 0)) then else if (v29(v436,1 + 0 ,1258 -(370 + 887) )==(3 -2)) then v437[2]=v73[v437[2]];end if (v29(v436,2 -0 ,4 -2 )~=1) then else v437[1 + 2 ]=v73[v437[6 -3 ]];end v504=3 -2 ;end if (1==v504) then v501=2 -1 ;break;end end end if (v501==(1 + 0)) then v487=1 + 0 ;break;end end end if (v487==1) then v434=3;break;end end break;end end end if (v434==(972 -(379 + 593))) then local v488=0 + 0 ;local v489;while true do if (v488==(0 + 0)) then v489=751 -(127 + 624) ;while true do if (v489==0) then local v502=0 + 0 ;local v503;while true do if (v502==0) then v503=357 -(351 + 6) ;while true do if (v503==1) then v489=1;break;end if (v503~=0) then else local v511=0 -0 ;while true do if (v511==(1578 -(774 + 804))) then v435=v29(v325,355 -(241 + 112) ,3);v436=v29(v325,1 + 3 ,1234 -(261 + 967) );v511=1 + 0 ;end if (v511==(1935 -(1365 + 569))) then v503=2 -1 ;break;end end end end break;end end end if (v489==(1 -0)) then v434=1;break;end end break;end end end end break;end if (v433==(727 -(307 + 420))) then v434=0;v435=nil;v433=1 + 0 ;end if (v433==1) then local v467=0 -0 ;local v468;while true do if (v467~=0) then else v468=1580 -(272 + 1308) ;while true do if (v468~=(1 + 0)) then else v433=2 -0 ;break;end if ((0 -0)==v468) then local v498=0;while true do if ((1933 -(1112 + 820))~=v498) then else v468=971 -(826 + 144) ;break;end if (0==v498) then v436=nil;v437=nil;v498=1 -0 ;end end end end break;end end end end break;end if (v432~=(1311 -(521 + 789))) then else v435=nil;v436=nil;v432=2 + 0 ;end end end break;end end break;end end end for v326=1 + 0 ,v32() do v69[v326-(2 -1) ]=v37();end v257=1;end end end if (v142==(1089 -(582 + 506))) then v121=235 -(201 + 33) ;break;end end break;end end end if (v121==(2 -1)) then local v143=0;while true do if (v143~=(0 + 0)) then else local v145=0 + 0 ;while true do if ((319 -(19 + 300))~=v145) then else for v262=1,v32() do v70[v262]=v32();end return v71;end end end end end break;end end end break;end end end if (v67~=0) then else local v122=0 + 0 ;local v123;while true do if (v122==0) then v123=0 -0 ;while true do if (v123==(0 + 0)) then local v137=0 -0 ;while true do if (v137==(1 + 0)) then v123=1;break;end if ((0 + 0)==v137) then v68={};v69={};v137=1 + 0 ;end end end if (v123==1) then local v138=0 + 0 ;while true do if (v138==(0 + 0)) then v70={};v71={v68,v69,nil,v70};v138=1815 -(1141 + 673) ;end if (v138~=(1815 -(273 + 1541))) then else v123=2 + 0 ;break;end end end if (v123==2) then v67=2 -1 ;break;end end break;end end end v97=1 + 0 ;end end break;end end break;end if (v95==(0 -0)) then v96=643 -(607 + 36) ;v97=nil;v95=1172 -(1035 + 136) ;end end end break;end if (v66~=(0 -0)) then else v67=0 + 0 ;v68=nil;v66=892 -(454 + 437) ;end if (v66==(1 -0)) then local v90=1762 -(149 + 1613) ;while true do if (v90~=(874 -(791 + 82))) then else v66=2;break;end if ((41 -(13 + 28))~=v90) then else v69=nil;v70=nil;v90=1;end end end end end local function v38(v44,v45,v46)local v74=v44[1];local v75=v44[2];local v76=v44[3];return function(...)local v83=0;local v84;local v85;local v86;local v87;local v88;while true do if (v83==2) then v88=nil;function v88()local v100=v74;local v101=v75;local v102=v76;local v103=v36;local v104={};local v105={};local v106={};for v111=1797 -(1732 + 65) ,v87 do if (((1719 + 312)<=3176) and (v111>=v102)) then v104[v111-v102 ]=v86[v111 + (502 -(10 + 491)) ];else v106[v111]=v86[v111 + ((625 + 1315) -(769 + 1170)) ];end end local v107=(v87-v102) + 1 + 0 ;local v108;local v109;while true do local v112=0 + 0 ;local v113;local v114;while true do if ((3249>=((2347 -(170 + 1461)) -(16 + 108))) and (v112==(0 -0))) then v113=1891 -(346 + 1545) ;v114=nil;v112=1 + 0 ;end if ((v112==(424 -(233 + 190))) or ((3080 -1938)>(3182 -(501 + 823)))) then while true do if ((v113==(1471 -(1056 + 415))) or ((4643 -3179)>=(4506 -(1786 + 32)))) then v114=(0 -0) -0 ;while true do if ((v114==(1390 -(862 + 527))) or ((1334 -629)>=4132)) then if ((v109<=(134 -100)) or ((10002 -7228)<=194)) then if ((v109<=(9 + 7)) or ((4661 -2806)<(2464 -727))) then if ((((21558 -15931) -(50 + 614))>=4520) and (v109<=7)) then if ((v109<=3) or ((3148 -(190 + 711))<=(739 -(203 + 13)))) then if ((v109<=(1 -0)) or ((1374 + 357)==(6311 -3853))) then if (((2659 -(364 + 198))>1343) and (v109>(0 + 0))) then v106[v108[3 -1 ]]= #v106[v108[(9 -5) -1 ]];else local v147=0;local v148;local v149;local v150;local v151;local v152;while true do if (((514 + 190)<=(7635 -4703)) and (v147==0)) then v148=0 + 0 + 0 ;v149=nil;v147=725 -(75 + 649) ;end if ((v147==(1 + 0 + 0)) or ((2590 + 1652)<=((2187 -(104 + 4)) -(1061 + 920)))) then v150=nil;v151=nil;v147=1 + 1 ;end if (((4823 -(675 + 113 + 887))>=(2138 -((1258 -(426 + 780)) + 66))) and (v147==(2 -0))) then v152=nil;while true do if ((v148==0) or ((495 -(9 + 44))>=(7023 -5609))) then v149=v108[1 + 1 ];v150,v151=v103(v106[v149](v14(v106,v149 + 1 ,v108[3])));v148=2 -1 ;end if ((v148==(1 + 1)) or ((1871 -((2847 -(821 + 616)) + 166))>(1366 + 890))) then for v361=v149,v85 do local v362=1797 -((2471 -1396) + 722) ;local v363;local v364;while true do if (((5907 -1694)>(7717 -4017)) and (v362==((1784 -(1091 + 690)) -2))) then while true do if (((3425 -1521)>=(1437 + 369)) and ((0 -0)==v363)) then v364=0 + 0 ;while true do if (((103 + 1272)<=(6931 -4071)) and ((0 + 0)==v364)) then v152=v152 + (1778 -(119 + 1658)) ;v106[v361]=v150[v152];break;end end break;end end break;end if ((v362==0) or ((2064 + (2496 -(1491 + 419)))==(1169 -538))) then v363=0 + (0 -0) ;v364=nil;v362=54 -(40 + 13) ;end end end break;end if ((v148==(3 -2)) or ((2735 -(80 + 543))>=((1449 + 2836) -(107 + 1151)))) then local v332=0;while true do if (((6403 -3906)>=(3011 -1669)) and (v332==(814 -(328 + 485)))) then v148=1 + 1 ;break;end if ((v332==(0 + 0)) or ((161 + 2644)<=((11781 -6272) -3102))) then v85=(v151 + v149) -(1834 -(960 + 873)) ;v152=0 + (875 -(41 + 834)) ;v332=1199 -(737 + 461) ;end end end end break;end end end elseif ((v109==(980 -(789 + 13 + 176))) or (((4660 -(369 + 886)) -2266)==(90 + 79))) then local v153=0 + 0 ;local v154;local v155;local v156;local v157;while true do if (((1862 + 2712)>=(8533 -5510)) and (v153==(6 -4))) then while true do if ((v154==(0 + 0)) or (2391<2359)) then local v333=115 -(35 + 12 + 68) ;while true do if ((v333==((0 -0) -0)) or ((4358 -((5184 -3618) + 119))<=((5947 -(963 + 555)) -3002))) then local v387=(0 -0) -0 ;while true do if ((182<=2427) and (v387==0)) then v155=v108[2];v156=v106[v155];v387=1 + 0 ;end if ((1301<=(17610 -(6744 + 7295))) and (v387==(1 + 0))) then v333=1985 -((5026 -3259) + 217) ;break;end end end if ((2749>(145 + 227)) and ((1 + 0)==v333)) then v154=1;break;end end end if ((v154==(1 + 0)) or ((3152 -(169 + 442))<(4578 -3143))) then v157=v106[v155 + ((1293 -(84 + 149)) -(463 + 595)) ];if ((v157>0) or (3500<(873 -(495 + 121)))) then if ((v156>v106[v155 + 1 + 0 ]) or ((3808 -(10 + 1208))>3979)) then v84=v108[8 -(13 -8) ];else v106[v155 + (11 -8) ]=v156;end elseif ((v156<v106[v155 + 1 + 0 ]) or ((1906 + 1150)>(6510 -3401))) then v84=v108[4 -1 ];else v106[v155 + 3 + 0 ]=v156;end break;end end break;end if (((7528 -4322)>=(53 + 610)) and (v153==(0 -0))) then v154=0;v155=nil;v153=1 + (610 -(535 + 75)) ;end if ((v153==(1 + 0)) or ((1863 -1158)>(1923 -804))) then local v301=0 + 0 ;while true do if ((v301==(1 + 0 + 0)) or ((9541 -7256)>3814)) then v153=2 + 0 ;break;end if ((2426<=(5910 -2790)) and (v301==(0 + 0))) then v156=nil;v157=nil;v301=1047 -(872 + 174) ;end end end end else v106[v108[5 -3 ]]=v106[v108[913 -(133 + (3034 -2257)) ]][v108[4]];end elseif ((v109<=(2 + 3)) or ((5803 -2042)<=1806)) then if ((v109>4) or ((2969 -(113 + 937))<421)) then do return;end else local v160=(932 -(74 + 858)) -0 ;local v161;local v162;local v163;while true do if (((0 + (405 -(191 + 214)))==v160) or ((203 -(2071 -(464 + 1523)))>=((2279 + 1610) -1635))) then v161=0 -0 ;v162=nil;v160=1;end if ((v160==1) or ((1439 -(771 + 184))<=(772 -(449 + 65)))) then v163=nil;while true do if (((5021 -1290)>=(14437 -10814)) and ((1 + 0)==v161)) then while true do if ((v162==((1169 -626) -(490 + 53))) or (((4306 -(23 + 203)) -(1235 + 453))>=(6676 -2033))) then v163=v108[891 -(81 + 482 + 326) ];do return v14(v106,v163,v163 + v108[1 + 2 ] );end break;end end break;end if (((3021 -(312 + 1085))<=((5275 -(803 + 688)) -(3892 -2183))) and (v161==(0 -0))) then v162=0 -0 ;v163=nil;v161=4 -3 ;end end break;end end end elseif ((v109==(13 -7)) or ((3609 -(1886 -(192 + 359)))<=(1633 -(1033 + 370)))) then if ((v108[1 + 1 ]<v106[v108[1614 -(193 + 1417) ]]) or ((1744 -(1012 + 547))==(6327 -3426))) then v84=v84 + (413 -(391 + 21)) ;else v84=v108[1 + 1 + 1 ];end else v106[v108[2 + 0 ]][v108[807 -(180 + 624) ]]=v106[v108[1 + 3 ]];end elseif ((4226>(3662 -(970 + 822))) and (v109<=(6 + 5))) then if ((v109<=(1 + 8)) or ((4573 -(664 + 1237))>(2154 + 960))) then if (((5427 -(210 + 1071))>=(7890 -5978)) and (v109==8)) then if (((78 + 386)<=(2659 -603)) and (v106[v108[1 + 1 ]]~=v108[10 -6 ])) then v84=v84 + (1 -0) ;else v84=v108[11 -8 ];end else v106[v108[2]]=v46[v108[6 -(7 -4) ]];end elseif ((474<3587) and (v109==(7 + (12 -9)))) then v106[v108[(2331 -1311) -(736 + 282) ]]=v108[1832 -(1180 + 649) ];else local v170=(0 -0) -0 ;local v171;local v172;local v173;while true do if ((v170==(0 + 0)) or ((4927 -(594 + 878))<507)) then v171=0 + 0 ;v172=nil;v170=1709 -(1152 + 556) ;end if (((6441 -(2122 + 186))>=2389) and (v170==(1 + 0))) then v173=nil;while true do if (((1108 -(437 + 470))<(625 + 85)) and (v171==(0 -0))) then v172=0 -(664 -(566 + 98)) ;v173=nil;v171=1;end if (((2183 -1441)<=(6560 -(1250 + 691))) and (v171==1)) then while true do if (((8784 -(6644 -(503 + 292)))==(14673 -11738)) and ((0 -0)==v172)) then v173=v108[829 -(567 + 260) ];v106[v173](v106[v173 + 1 + 0 ]);break;end end break;end end break;end end end elseif ((v109<=(38 -(13 + 12))) or ((3867 -2748)>=(423 + 876))) then if ((v109>(1687 -(549 + 1126))) or ((653 + 604)>(2398 -(531 + 545)))) then local v174=0 + 0 ;while true do if ((v174==(0 -0)) or ((2088 -1569)==(3225 + 1137))) then v106[v108[2]]=v108[433 -(91 + 339) ]~=0 ;v84=v84 + 1 + 0 ;break;end end elseif ((4212>=(5156 -(568 + 833))) and (v106[v108[1 + 1 ]]~=v106[v108[2 + 2 ]])) then v84=v84 + 1 ;else v84=v108[1 + (662 -(159 + 501)) ];end elseif (((3510 + 1329)>(4495 -(3347 -(399 + 9)))) and (v109<=(8 + 6))) then local v175=0 + (784 -(652 + 132)) ;local v176;local v177;local v178;local v179;while true do if (((1366 -(415 + (366 -251)))<=(4209 -(843 + 377))) and (2==v175)) then while true do if ((v176==(0 -(0 -0))) or ((6347 -4456)>=(4314 -(190 + 76)))) then local v335=1294 -(1038 + 256) ;while true do if (((0 -0)==v335) or (2029<=(1391 -1112))) then local v390=208 -(24 + (540 -356)) ;while true do if ((v390==0) or ((6479 -4130)==(5488 -(6 + 660)))) then v177=v101[v108[280 -((1984 -(497 + 1343)) + 133) ]];v178=nil;v390=1;end if (((4822 -1948)<=(5297 -(170 + 1469))) and (v390==(1 -(0 + 0)))) then v335=1010 -((470 -188) + 727) ;break;end end end if (((1 -(0 -0))==v335) or (4022==(2309 + 1701))) then v176=1;break;end end end if ((3575>=(2899 -(464 + 53))) and (v176==1)) then local v336=0;while true do if (((1321 + 556)<=3512) and (v336==((191 -(47 + 144)) + 0))) then local v391=0;while true do if ((((13641 -(700 + 793)) -(8862 -(44 + 21)))>=(1726 -937)) and (v391==(3 -(2 -0)))) then v336=(1070 + 611) -(1665 + 15) ;break;end if ((2016>=1728) and (v391==(0 -0))) then v179={};v178=v11({},{__index=function(v438,v439)local v449=0 + 0 ;local v450;while true do if (((17106 -12778)==(9060 -4732)) and (v449==(0 -0))) then local v462=555 -(280 + 275) ;while true do if (((2941 + 231)<=(13355 -8773)) and (v462==((1581 + 414) -(610 + 1385)))) then v450=v179[v439];return v450[359 -(286 + 72) ][v450[19 -(4 + 13) ]];end end end end end,__newindex=function(v440,v441,v442)local v451=0 + 0 ;local v452;local v453;while true do if ((v451==(0 -0)) or ((163 -121)>(1438 -(300 + 907)))) then local v463=0 -0 ;while true do if (((3393 -(419 + (1373 -1008)))==2609) and ((0 + 0)==v463)) then v452=(3861 -2873) -(142 + (1461 -615)) ;v453=nil;v463=1;end if (((1 -0)==v463) or ((2114 -1179)==(5211 -(138 + 260 + 1578)))) then v451=1;break;end end end if (((1 + 0)==v451) or ((698 + 197)==(1607 + (2060 -(208 + 370))))) then while true do if (((3398 -(388 + 198))>=(3062 -((3681 -2853) + 855))) and (v452==0)) then v453=v179[v441];v453[1 + 0 ][v453[5 -3 ]]=v442;break;end end break;end end end});v391=1 + 0 ;end end end if ((v336==1) or ((136 + 181)>(2359 -((1043 -518) + 565)))) then v176=1 + 1 ;break;end end end if ((v176==(2 + 0)) or ((4719 -(99 + 681))==(4814 -(32 + 940)))) then for v365=1,v108[906 -(352 + 550) ] do local v366=0 + 0 ;local v367;local v368;local v369;while true do if (((1 + 20)==(20 + 1)) and ((0 + 0)==v366)) then v367=(225 -(152 + 73)) -0 ;v368=nil;v366=1;end if (((551 + (4083 -(243 + 1556)))>=(783 + 120)) and (v366==(3 -(1 + 1)))) then v369=nil;while true do if (((6212 -(1075 + 176))>(3272 -(17 + 450))) and (v367==1)) then while true do if (((2 -1)==v368) or ((6559 -(1142 + 576))==1915)) then if (((1999 + 318)<(5002 -(1116 + 178))) and (v369[920 -(551 + (1757 -1389)) ]==(669 -(69 + 557)))) then v179[v365-(2 -1) ]={v106,v369[1638 -(291 + 1344) ]};else v179[v365-(1 -(709 -(384 + 325))) ]={v45,v369[1 + 2 ]};end v105[ #v105 + 1 + 0 ]=v179;break;end if (((1527 + 26)>=473) and (v368==(0 + 0))) then local v459=0 -0 ;while true do if ((((3264 -(1486 + 137)) + 375)==2016) and (v459==(1359 -(313 + 1045)))) then v368=125 -(29 + 95) ;break;end if ((v459==(656 -(603 + 53))) or (3202<(4526 -(1373 + 238)))) then local v469=(937 -(257 + 118)) -(154 + (863 -455)) ;while true do if ((2920>(9175 -(8997 -(1131 + 725)))) and (v469==(1056 -(82 + 974)))) then v84=v84 + 1 + 0 ;v369=v100[v84];v469=3 -2 ;end if ((v469==(1 + 0)) or ((4138 -(56 + 19))<((5415 -(234 + 960)) -((1772 -1002) + 185 + 195)))) then v459=1 + 0 ;break;end end end end end end break;end if (((3678 -1289)==(3065 -(455 + 221))) and (v367==0)) then v368=0 + 0 ;v369=nil;v367=1 -0 ;end end break;end end end v106[v108[1 + 1 ]]=v38(v177,v178,v46);break;end end break;end if ((((1873 -728) -734)<=1274) and (v175==(881 -(69 + 812)))) then local v303=(374 -(179 + 195)) + (0 -0) ;while true do if ((v303==((1330 -637) -(63 + 630))) or ((16846 -13286)>=(1786 + (7308 -4264)))) then v176=0;v177=nil;v303=(1550 -(582 + 164)) -(54 + 749) ;end if ((3058<((3027 -(317 + 41)) + 1156)) and (v303==(1 + 0 + 0))) then v175=1611 -(167 + 1443) ;break;end end end if (((4084 -(318 + 5))>=(739 + 2122)) and ((444 -(113 + 330))==v175)) then local v304=1106 -(544 + 562) ;while true do if (((90 + 202)<(1562 -723)) and ((455 -(330 + 125))==v304)) then v178=nil;v179=nil;v304=1 -0 ;end if ((v304==1) or (526>=(4580 -(898 + 325)))) then v175=2;break;end end end end elseif (((474 + 171)<((35952 -24699) -8029)) and (v109==(1545 -(1482 + 48)))) then v106[v108[(5 -1) -2 ]]=v106[v108[(995 -(477 + 517)) + 2 ]] -v108[80 -(34 + 42) ] ;else v106[v108[1861 -(1857 + 2) ]][v106[v108[3]]]=v106[v108[1282 -(504 + 774) ]];end elseif ((376<(3031 -1525)) and (v109<=(73 -48))) then if ((v109<=(19 + 1)) or (2994<=(1358 + 1507))) then if ((v109<=(695 -(52 + 625))) or ((1405 + 19)>(1738 -(47 + 194)))) then if ((3325>((289 + 3160) -(79 + 290))) and (v109>(1019 -((1575 -832) + 259)))) then local v180=0;local v181;local v182;local v183;local v184;local v185;while true do if (((678 + 2685)<=((5126 -(431 + 9)) -(719 + 506))) and (v180==(0 + 0 + 0))) then v181=0 + 0 ;v182=nil;v180=3 -2 ;end if ((v180==(404 -(12 + 391))) or ((17609 -12865)<=(4805 -1209))) then local v305=0 + (1713 -(405 + 1308)) ;while true do if ((v305==1) or (3409>=(9087 -(17769 -12540)))) then v180=8 -6 ;break;end if ((3449>=(1569 -(179 + 672))) and (v305==(1816 -((2538 -1250) + 528)))) then v183=nil;v184=nil;v305=3 -2 ;end end end if ((3230>(1053 + 424)) and (v180==(2 -0))) then v185=nil;while true do if (((4691 -(194 + 188))<=((3350 -(78 + 4)) + 1172)) and (v181==(71 -(40 + 31)))) then local v338=198 -(11 + 187) ;while true do if (((1319 -(974 + 345))==v338) or ((3899 -(404 + 1523))==456)) then local v392=0;while true do if ((v392==(1 + 0)) or ((9486 -5238)==(3437 -(684 + 18 + 57)))) then v338=1 + 0 ;break;end if ((1990<=4570) and (v392==0)) then v182=v108[2 + 0 ];v183,v184=v103(v106[v182](v14(v106,v182 + 1 ,v85)));v392=(440 -(6 + 433)) -0 ;end end end if ((3658>(3450 -1935)) and (v338==(672 -(188 + 483)))) then v181=1 -0 ;break;end end end if (((996 + 3249)==(7843 -3598)) and (v181==(880 -(266 + 612)))) then for v370=v182,v85 do local v371=0 + (514 -(222 + 292)) ;local v372;local v373;while true do if ((v371==0) or (((18917 -(301 + 26)) -13867)<=(18 + 3576))) then v372=(0 -0) -0 ;v373=nil;v371=(4 + 0) -(5 -2) ;end if ((v371==1) or (773>(8333 -6506))) then while true do if (((0 -0)==v372) or ((6796 -2068)<=3606)) then v373=0 + 0 ;while true do if ((1622==(789 + 833)) and (v373==(0 -0))) then v185=v185 + (1 -(0 + 0)) ;v106[v370]=v183[v185];break;end end break;end end break;end end end break;end if ((v181==1) or (1308>(3468 -(1242 + 377)))) then local v339=0;local v340;while true do if ((v339==(0 + 0 + 0)) or ((380 + 4295)<=(2993 -(122 + 916)))) then v340=1567 -(1414 + 153) ;while true do if ((3351>=(874 + 381)) and (v340==(232 -(107 + 125)))) then v85=(v184 + v182) -((2556 -1275) -(916 + 364)) ;v185=0 -0 ;v340=4 -3 ;end if ((v340==(4 -3)) or ((12332 -9084)<1553)) then v181=6 -4 ;break;end end break;end end end end break;end end elseif (((1083 -(68 + 868))<(2259 + 2128)) and (v106[v108[2]]>v106[v108[1158 -(261 + 893) ]])) then v84=v84 + (1683 -(1566 + 116)) ;else v84=v84 + v108[3] ;end elseif ((v109==((783 + 512) -(898 + 378))) or (1052==(18767 -13829))) then local v186=1064 -(296 + 50 + 718) ;local v187;while true do if ((3763>(2730 -1534)) and (v186==(0 + 0))) then v187=v108[7 -5 ];v106[v187](v14(v106,v187 + (787 -(84 + 702)) ,v85));break;end end else v106[v108[2]]={};end elseif (((2692 -(807 + 238))==(3555 -(1768 + (341 -201)))) and (v109<=(22 + 0))) then if ((v109==(95 -74)) or ((7106 -3356)==3532)) then v106[v108[575 -(8 + 565) ]]=v45[v108[558 -(324 + 231) ]];else v106[v108[556 -(147 + 407) ]]=v38(v101[v108[3]],nil,v46);end elseif ((v109<=((768 -(264 + 487)) + 6)) or (((1989 -(1096 + 834)) -32)>(3432 -(1882 + 47)))) then if ((v106[v108[2]]<=v108[4]) or (((115 + 518) -453)>(6456 -2210))) then v84=v84 + (1 -0) ;else v84=v108[1310 -(465 + 842) ];end elseif (((3775 -(405 + 911))<=(4569 -(168 + 146))) and (v109>((43 + 10) -29))) then v106[v108[1626 -(47 + 1577) ]]=v106[v108[5 -2 ]]%v108[18 -14 ] ;else v106[v108[1 + 1 ]]=v106[v108[3]]%v106[v108[7 -3 ]] ;end elseif ((v109<=29) or ((6833 -(131 + (3217 -(1175 + 196))))==((5037 -(160 + 538)) -2462))) then if (((6433 -4280)>=1415) and (v109<=(38 -11))) then if ((4474>=(251 + 747)) and (v109==(50 -24))) then v106[v108[1 + 1 + 0 ]]=v106[v108[4 -1 ]] * v108[1 + 3 ] ;else v106[v108[1 + 1 ]]=v106[v108[306 -(16 + 287) ]] + v108[456 -(190 + 262) ] ;end elseif ((v109==28) or ((2780 -(369 + 975))>=(386 + 1633))) then if ((3515>2710) and (v108[2]==v108[4 + 0 ])) then v84=v84 + (1 -0) ;else v84=v108[3];end else v46[v108[3]]=v106[v108[1926 -(1012 + 912) ]];end elseif ((v109<=(30 + 1)) or ((5837 -(961 + (1944 -1041)))<=(6423 -4410))) then if ((v109==30) or ((101 + 1173)>2205)) then local v196=0 + 0 ;local v197;local v198;while true do if ((2086<(5167 -(225 + 1124))) and (v196==(0 -0))) then v197=0 + 0 ;v198=nil;v196=1 -0 ;end if ((v196==(1 -0)) or (4012<(9250 -6153))) then while true do if ((v197==0) or ((128 + 85)>=(3201 -(370 + 1295)))) then v198=v108[1 + 1 ];do return v14(v106,v198,v85);end break;end end break;end end else local v199=0 + 0 ;local v200;local v201;local v202;local v203;while true do if ((v199==(1 + 0)) or ((3583 -1325)<=330)) then v202=nil;v203=nil;v199=1 + 1 ;end if (((6463 -1833)==4630) and (((1507 -(101 + 217)) -(405 + 782))==v199)) then while true do if ((v200==(0 + 0)) or ((572 + 1362)>=(1293 + 1616))) then v201=0;v202=nil;v200=1;end if ((v200==(1 + 0)) or ((112 + 175)>(1590 -397))) then v203=nil;while true do if ((v201==(1 + 0 + 0)) or ((10391 -(15218 -9583))==(5445 -(325 + 1207)))) then for v405=65 -(49 + 15) , #v105 do local v406=0 -0 ;local v407;local v408;local v409;while true do if (((292 + 501)<=(2175 -(626 + 29))) and (v406==(1 + 0))) then v409=nil;while true do if ((v407==1) or ((851 + 2364)==245)) then while true do if ((v408==(1980 -(1973 + 7))) or (4080<2945)) then v409=v105[v405];for v476=0 -0 , #v409 do local v477=(235 + 580) -(654 + 161) ;local v478;local v479;local v480;while true do if (((201 + 1378)<2110) and (v477==(1691 -(370 + 1320)))) then v480=v478[273 -(141 + 130) ];if ((2207<=3235) and (v479==v106) and (v480>=v202)) then local v499=0;local v500;while true do if (((0 + 0)==v499) or (((12313 -6486) -(399 + 471))<(4717 -((3989 -2846) + 838)))) then v500=0;while true do if (((3421 -2187)<=(8145 -6232)) and (((2548 -(765 + 57)) -(764 + 962))==v500)) then v203[v480]=v479[v480];v478[(1 + 0) -0 ]=v203;break;end end break;end end end break;end if ((v477==0) or ((142 + 1013)>3219)) then v478=v409[v476];v479=v478[1];v477=109 -(23 + 85) ;end end end break;end end break;end if ((v407==0) or ((5811 -(966 + 53))<=4599)) then v408=0 -0 ;v409=nil;v407=3 -2 ;end end break;end if ((((973 -(947 + 26)) -0)==v406) or ((5366 -(851 + 1112))<3056)) then v407=0;v408=nil;v406=1;end end end break;end if (((13739 -9551)==(20832 -16644)) and (v201==(1301 -(372 + 929)))) then local v393=1104 -((1077 -(90 + 467)) + 584) ;while true do if (((2704 -1820)<=(1343 -(9 + 14))) and (v393==(1955 -(1635 + 320)))) then local v427=1683 -(1173 + 510) ;while true do if (((1 -0)==v427) or ((1106 + 3397)==(1620 + (2112 -(1565 + 230))))) then v393=1332 -(607 + 724) ;break;end if (((1303 + 1124)>((3480 -(42 + 267)) -2145)) and (v427==(0 + 0))) then v202=v108[1 + 1 ];v203={};v427=1 + 0 ;end end end if (((823 -519)>((2779 -(696 + 402)) -(675 + 775))) and (v393==((573 -(83 + 180)) -(226 + 83)))) then v201=1;break;end end end end break;end end break;end if (((3283 -(100 + 36))>(2014 -(94 + 1482))) and (v199==(0 -0))) then v200=0 -0 ;v201=nil;v199=1 + 0 ;end end end elseif ((v109<=(461 -(102 + 327))) or ((385 + 1169)>(3021 -(331 + 96)))) then for v258=v108[6 -(5 -1) ],v108[1307 -(637 + 667) ] do v106[v258]=nil;end elseif ((2042<(3182 + 1554)) and (v109==(94 -61))) then v84=v108[(1624 -(533 + 1084)) -4 ];else local v275=0 + 0 ;local v276;local v277;local v278;while true do if (((9405 -6403)>(322 -(40 + 166))) and (v275==(586 -(187 + 398)))) then v278=nil;while true do if ((v276==(1481 -(771 + 710))) or ((3715 -1098)>=(16216 -11733))) then v277=0;v278=nil;v276=1;end if ((v276==(1 + 0)) or ((236 -(48 + (67 -17)))>(11943 -7831))) then while true do if (((2719 -(95 + 11))==(2327 + 286)) and (v277==0)) then v278=v108[2 -0 ];do return v106[v278](v14(v106,v278 + (827 -(312 + 514)) ,v108[3]));end break;end end break;end end break;end if (((4673 -1217)<=(9277 -5378)) and (v275==(704 -(70 + 634)))) then v276=0 + (0 -0) ;v277=nil;v275=1;end end end elseif ((v109<=(390 -(91 + 245 + 3))) or ((2748 -(470 + 862))>=(7807 -4029))) then if (((7140 -3103)>151) and (v109<=(367 -(291 + 34)))) then if (((2114 -(13 + 1059 + 280))<=1549) and (v109<=(685 -(122 + 525)))) then if (((5444 -(311 + 992))>=2323) and (v109<=(770 -(353 + (1885 -(568 + 936)))))) then if (((1561 -998)==(1223 -660)) and (v109>(649 -(135 + 479)))) then v106[v108[2 + 0 ]]=v106[v108[1787 -(452 + 1332) ]]/v108[185 -(74 + 107) ] ;else v106[v108[2]]=v108[2 + 1 ]^v106[v108[9 -(1 + 4) ]] ;end elseif ((v109==((276 -154) -85)) or ((6036 -(581 + 975))>4850)) then local v206=0 -0 ;local v207;local v208;while true do if ((v206==1) or ((473 + 269)==(170 + 946))) then for v314=v207 + (1974 -((203 -140) + 1910)) ,v108[1483 -(927 + 267 + 286) ] do v8(v208,v106[v314]);end break;end if ((v206==(412 -(259 + 121 + 32))) or ((2432 -1335)>(4553 -3125))) then local v307=170 -(151 + 19) ;while true do if ((v307==(1256 -(468 + 787))) or ((3422 -(415 + 1190))>((7564 -(246 + 758)) -3232))) then v206=1 + 0 ;break;end if ((v307==(0 + 0)) or ((6289 -(666 + 418 + 206))<=(347 + 78))) then v207=v108[1 + 1 ];v208=v106[v207];v307=1 + 0 ;end end end end elseif ((v106[v108[2]]>v108[(8 -5) + (175 -(55 + 119)) ]) or ((370 -269)==((192 -76) + 669))) then v84=v84 + (1298 -(906 + 391)) ;else v84=v108[(6 + 1) -4 ];end elseif ((v109<=(1239 -(806 + 393))) or ((1559 + 1462)<=(470 + 394))) then if (((14037 -9531)>(3360 -(261 + 1423))) and (v109==(103 -64))) then local v209=855 -(128 + 727) ;local v210;local v211;local v212;while true do if (((508 + 1283)>1455) and (v209==0)) then v210=0 + 0 ;v211=nil;v209=1562 -(1036 + 525) ;end if ((v209==(3 -2)) or ((6101 -4294)<(179 + 807))) then v212=nil;while true do if (((677 + 2750)<(5236 -(99 + 234))) and (v210==(1367 -(608 + 758)))) then while true do if ((1504<(15415 -(28224 -17222))) and (0==v211)) then v212=v108[2 + 0 + 0 ];v106[v212]=v106[v212]();break;end end break;end if ((2345>=(3719 -(699 + 1107))) and (v210==(0 + 0))) then local v344=0 + 0 ;while true do if ((((9093 -3045) -(601 + 536))>=(2230 -(836 + 883))) and (v344==(0 + 0 + 0))) then v211=1712 -(912 + 800) ;v212=nil;v344=1 + 0 ;end if (((1956 + 757 + 1040)>(808 + 1879)) and (v344==(1227 -(673 + 553)))) then v210=2 -1 ;break;end end end end break;end end else local v213=270 -(109 + 161) ;local v214;local v215;local v216;local v217;while true do if (((1173 + 1308)>=1720) and (v213==(2 + 0 + 0))) then for v315=v214,v85 do local v316=299 -(192 + 107) ;local v317;while true do if ((v316==(1571 -((2274 -(741 + 202)) + (709 -469)))) or (2811<(5632 -3154))) then v317=0;while true do if ((v317==0) or ((3816 -(217 + (2158 -913)))==(1343 -(498 + 278)))) then v217=v217 + 1 + 0 ;v106[v315]=v215[v217];break;end end break;end end end break;end if (((5235 -3270)<(1942 + 777)) and (v213==1)) then local v308=706 -(344 + 362) ;while true do if ((v308==(0 -0)) or ((902 -579)>=(4153 -(133 + (970 -(921 + 36)))))) then v85=(v216 + v214) -(986 -(96 + 889)) ;v217=0;v308=1 + 0 ;end if ((v308==1) or ((3389 -(1368 + 88))>=3242)) then v213=6 -4 ;break;end end end if ((v213==(996 -(69 + 927))) or ((489 + 2732)<=(4951 -(94 + 1645)))) then local v309=415 -(268 + 147) ;while true do if (((18325 -13764)>((7902 -4319) + 958)) and (v309==(2 -1))) then v213=1223 -(652 + (815 -245)) ;break;end if ((v309==(0 + 0)) or (3336>=(6690 -(1679 + 39)))) then v214=v108[556 -(380 + 174) ];v215,v216=v103(v106[v214](v106[v214 + (4 -3) ]));v309=404 -(204 + 199) ;end end end end end elseif ((v109==((366 -(204 + 68)) -53)) or (2602>=3005)) then if (v106[v108[(4 -2) + 0 ]] or ((2830 -(289 + 365))<(1725 -1039))) then v84=v84 + (1072 -(304 + 767)) ;else v84=v108[3];end elseif ((4323>(8215 -5760)) and  not v106[v108[2 + (0 -0) ]]) then v84=v84 + (1169 -(152 + 1016)) ;else v84=v108[3];end elseif (((777 + 1789)==2566) and (v109<=46)) then if ((v109<=(336 -(209 + 83))) or ((4360 -(658 + 96))<=(1929 -(10 + (101 -23))))) then if ((4810>=(354 + 236)) and (v109>(111 -68))) then if (((2789 + 1996)==4785) and (v106[v108[(2 + 2) -2 ]]==v108[4])) then v84=v84 + (1 -0) ;else v84=v108[3];end else v106[v108[1 + 1 ]]=v106[v108[3]];end elseif (((6160 -1551)==(5000 -(271 + 120))) and (v109>45)) then v106[v108[1381 -(346 + 983 + 50) ]]=v106[v108[3]] * v106[v108[4]] ;else v106[v108[2]]=v106[v108[14 -11 ]] -v106[v108[7 -(728 -(468 + 257)) ]] ;end elseif ((v109<=48) or (((1537 -(61 + 313)) + 136)>=(79 + 3453))) then if ((v109>(10 + 37)) or (1638>=(6337 -3043))) then do return v106[v108[1 + 1 ]];end else v106[v108[2]]=v106[v108[2 + 1 ]] + v106[v108[4]] ;end elseif (((10832 -6563)==(5762 -((2819 -(610 + 830)) + 114))) and (v109<=(1831 -(1696 + 86)))) then if ((2825>2605) and (v108[2]==v106[v108[4]])) then v84=v84 + (629 -(393 + 235)) ;else v84=v108[3];end elseif (((2278 + 542)<=3634) and (v109>(49 + (279 -(76 + 202))))) then local v284=205 -(109 + 5 + 91) ;local v285;local v286;while true do if (((2873 -(597 + 219))<(5217 -(140 + 759))) and (v284==(1705 -(1427 + 278)))) then local v328=1409 -(603 + 806) ;while true do if (((967 -(58 + 15))>=(551 -255)) and (v328==1)) then v284=567 -(101 + 465) ;break;end if ((3656==(4784 -((1232 -634) + 530))) and (v328==0)) then v285=v108[2 -0 ];v286=v106[v285];v328=377 -(269 + 107) ;end end end if ((v284==(2 -1)) or ((344 + 179)<=(1811 -(154 + (4015 -2412))))) then for v346=v285 + 1 + 0 ,v85 do v8(v286,v106[v346]);end break;end end elseif ((v108[2]<v108[4]) or ((2053 -((874 -(373 + 47)) + 104))>=(3578 + 391))) then v84=v84 + 1 + 0 ;else v84=v108[3 + 0 ];end elseif (((4245 -3157)<=(1330 + 180)) and (v109<=(941 -(739 + 142)))) then if ((628<=(2774 -1756)) and (v109<=55)) then if ((4490>=(2036 -1257)) and (v109<=53)) then if (((3020 -(221 + 505))>=(2054 -1388)) and (v109>((1795 -(1651 + 137)) + 45))) then if (((2197 -(359 + 543 + 74))<=(5431 -((1422 -(373 + 90)) + 686))) and (v106[v108[324 -((1733 -(1404 + 301)) + 294) ]]<=v106[v108[1876 -(105 + 1767) ]])) then v84=v84 + (2 -1) ;else v84=v108[3];end else local v223=0;local v224;while true do if ((v223==(1664 -(660 + 1004))) or (264>=441)) then v224=v106[v108[412 -(134 + (712 -438)) ]];if ( not v224 or ((9274 -4559)<=748)) then v84=v84 + ((1 + 0) -0) ;else local v329=0 -0 ;local v330;while true do if ((v329==((0 -0) + 0)) or (2012<(3216 -1989))) then v330=(1838 -(1411 + 427)) -0 ;while true do if (((5660 -3016)>(1378 + 1140)) and ((0 + 0)==v330)) then v106[v108[6 -4 ]]=v224;v84=v108[3 + 0 ];break;end end break;end end end break;end end end elseif (((4548 -(327 + 1557))>=(1742 -(69 + 68 + 84))) and (v109==54)) then v45[v108[3]]=v106[v108[2]];else local v227=(2406 -(190 + 1549)) -(4 + 663) ;local v228;local v229;local v230;local v231;local v232;while true do if ((v227==1) or ((3516 -(392 + 1604))>=(5248 -3103))) then v230=nil;v231=nil;v227=1071 -(792 + 277) ;end if ((v227==2) or ((13682 -10363)<(5136 -2846))) then v232=nil;while true do if ((v228==(0 + 0)) or (((2457 -644) + 1367)<(868 + 553))) then local v347=0 -(0 -0) ;while true do if (((379 + 1529)>=(653 + 928)) and (v347==(0 -0))) then v229=0;v230=nil;v347=(909 -(827 + 78)) -3 ;end if (((4888 -(694 + 483))<(6195 -(139 + 1693))) and (v347==(3 -2))) then v228=1 + 0 ;break;end end end if ((v228==(1 + 0)) or ((13755 -9072)<(5069 -(223 + (1222 -352))))) then local v348=0;while true do if (((1293 -639)<(4411 -(801 + 897))) and (v348==(1734 -(1143 + 591)))) then v231=nil;v232=nil;v348=1 -0 ;end if ((v348==(61 -(18 + 42))) or ((4978 -(402 + 1399))==(2330 -((66 -40) + 549)))) then v228=3 -1 ;break;end end end if ((v228==(3 -1)) or ((688 + 524)==((13178 -9350) -1953))) then while true do if (((5045 -3257)<4908) and (v229==(0 -0))) then local v396=0 + 0 ;local v397;while true do if (((0 + 0)==v396) or (3996<=(2364 -(1211 + 767)))) then v397=0;while true do if (((9135 -4997)>3901) and (((1863 -(1429 + 434)) + 0)==v397)) then v230=v108[2];v231={v106[v230](v14(v106,v230 + (3 -2) ,v108[95 -(7 + 85) ]))};v397=1;end if ((v397==(4 -3)) or ((5945 -1005)==(4356 -(1005 + 662)))) then v229=1 + 0 ;break;end end break;end end end if ((v229==(1 + 0)) or ((1137 + 2063)>=4542)) then v232=0 + 0 ;for v412=v230,v108[4] do local v413=0;local v414;local v415;while true do if ((v413==0) or ((2554 + 1611)<(14757 -11225))) then v414=(4487 -2647) -((2228 -(402 + 21)) + 35) ;v415=nil;v413=1 -0 ;end if (((2673 -1800)<((3375 -1604) -(9 + 10))) and ((2 -(1771 -(1628 + 142)))==v413)) then while true do if (((1813 + 2323)>=((3961 -1479) + 262)) and (v414==(63 -(46 + 17)))) then v415=0;while true do if ((v415==(0 -0)) or ((836 -282)>(3093 -((752 -(340 + 121)) + 40)))) then v232=v232 + (384 -(155 + (1514 -(1089 + 197)))) ;v106[v412]=v231[v232];break;end end break;end end break;end end end break;end end break;end end break;end if (((1919 -(144 + 111))>(2930 -(32 + 1384))) and (v227==(0 + 0))) then v228=1637 -(232 + (2938 -(1283 + 250))) ;v229=nil;v227=1;end end end elseif ((v109<=57) or (1363>=4437)) then if ((v109>(213 -157)) or ((206 + 2819)<((1815 + 562) -(603 + 352)))) then local v233=0 -(91 -(66 + 25)) ;local v234;local v235;while true do if (((5338 -((2728 -1908) + 743))==(8674 -4899)) and (v233==(1 + 0))) then while true do if ((v234==((1093 -(7 + 136)) -(118 + 166 + 665))) or ((17719 -13210)<(4707 -2216))) then for v374=v235,v85 do local v375=0;local v376;local v377;while true do if (((14058 -9146)>((9117 -6833) -(10 + 68))) and (v375==0)) then v376=(135 + 788) -(100 + 823) ;v377=nil;v375=(1 + 2) -2 ;end if (((1062 + 1955)==(3445 -(269 + 159))) and (v375==(1334 -(1157 + 176)))) then while true do if (((1443 + 2604)==(11637 -7590)) and (0==v376)) then v377=v104[v374-v235 ];v106[v374]=v377;break;end end break;end end end break;end if ((v234==(1108 -(857 + 251))) or (((597 + 3570) -((3839 -2263) + 336))==(58 + 182 + 2993))) then v235=v108[2 + 0 ];v85=(v235 + v107) -(1822 -(41 + 1780)) ;v234=2 -1 ;end end break;end if ((v233==(545 -(287 + 258))) or ((11154 -6715)==(673 + 211 + 537))) then v234=0 + 0 ;v235=nil;v233=257 -(234 + 22) ;end end elseif (((1719 + 1491)>(879 -426)) and (v108[2]~=v106[v108[3 + 1 ]])) then v84=v84 + (1023 -(412 + 610)) ;else v84=v108[5 -2 ];end elseif (((2043 + 1480)>=1936) and (v109<=(211 -153))) then local v236=1028 -(161 + 867) ;local v237;local v238;while true do if ((1171<(11620 -7466)) and (v236==(1 + 0))) then while true do if (((1947 -(1549 + 398))==v237) or ((636 + 81)<=(676 -478))) then v238=v108[1705 -((1380 -(344 + 190)) + 180 + 677) ];v106[v238]=v106[v238](v14(v106,v238 + 1 ,v108[307 -(18 + 286) ]));break;end end break;end if (((5739 -((114 -(20 + 74)) + 830))>(5158 -2288)) and (v236==(0 -0))) then v237=0 -0 ;v238=nil;v236=2 -1 ;end end elseif (((657 + 779)==(514 + 922)) and (v109>(13 + 46))) then if ((3257>=(602 + 1141)) and (v108[15 -(9 + 4) ]<=v108[4])) then v84=v84 + (3 -2) ;else v84=v108[1720 -(1702 + 15) ];end else local v289=0 + 0 ;local v290;local v291;local v292;local v293;local v294;while true do if (((8295 -(7008 -(203 + 1302)))==2792) and (v289==(422 -(72 + (961 -612))))) then v292=nil;v293=nil;v289=1 + 1 ;end if (((2899 -(913 + 805))>=(1513 -634)) and (v289==(2 + 0))) then v294=nil;while true do if (((660 + 2783)>=2748) and (v290==2)) then while true do if (((1957 -(252 + 498))<(3052 -(605 + 275))) and (v291==0)) then local v419=(0 -0) + 0 ;local v420;while true do if ((v419==0) or (396>=2150)) then v420=0;while true do if (((1 + 0)==v420) or ((1969 -(112 + 74))>2059)) then v291=2 -1 ;break;end if ((((7740 -(181 + 1267)) -(1134 + 687))>(2065 + 1447 + 568)) and ((0 + 0)==v420)) then local v464=0;while true do if ((507<=2979) and (v464==(0 -0))) then v292=v108[544 -(423 + 119) ];v293={v106[v292](v14(v106,v292 + (869 -(582 + 286)) + 0 ,v85))};v464=370 -(293 + 76) ;end if ((1==v464) or ((1048 -396)>(309 + 3636))) then v420=1442 -((1802 -977) + 616) ;break;end end end end break;end end end if (((2713 -(1262 + 22))>(2058 -1028)) and (v291==(1 + 0))) then v294=0;for v428=v292,v108[1767 -(1000 + 763) ] do local v429=800 -(398 + 402) ;local v430;local v431;while true do if (((755 + 10)<(3386 -(423 + 695))) and (v429==0)) then v430=311 -(144 + 167) ;v431=nil;v429=1 -0 ;end if (((1 + 0 + 0)==v429) or (4160==(3384 -(441 + 765)))) then while true do if ((v430==((0 -0) + 0)) or ((34 + 3 + 72)>(3966 -(109 + 148)))) then v431=0 + 0 ;while true do if (((2520 -(6 + 115))>=(680 -443)) and (v431==(0 -0))) then v294=v294 + (1850 -(453 + 1396)) ;v106[v428]=v293[v294];break;end end break;end end break;end end end break;end end break;end if ((v290==((2 -1) + 0)) or ((2484 -(5 + 89))<(3022 -1962))) then v293=nil;v294=nil;v290=7 -5 ;end if ((((2565 -1097) + 673)>(299 -(112 + 14))) and (v290==(0 + 0))) then v291=1720 -(1510 + 210) ;v292=nil;v290=2 -1 ;end end break;end if (((4679 -(656 + 1336))==(10153 -7466)) and (v289==(0 -0))) then v290=0 + 0 ;v291=nil;v289=2 -(1 + 0) ;end end end elseif ((v109<=(145 -81)) or ((1721 -740)<=(257 + 341))) then if (((4255 -((1774 -(382 + 1081)) + 776))>=(2123 -(263 + 394))) and (v109<=62)) then if ((v109>61) or (3848<973)) then v106[v108[2 + 0 ]]=v108[1 + 2 ]/v108[1 + 1 + 2 ] ;else v106[v108[1 + 1 ]]=v106[v108[3]]/v106[v108[4]] ;end elseif ((v109==((290 + 565) -(372 + 420))) or ((15159 -10903)<=2048)) then local v241=(0 + 0) -0 ;local v242;local v243;while true do if (((1762 + 22)<(3315 -(250 + 1117))) and (v241==(0 + 0))) then v242=0 -0 ;v243=nil;v241=1361 -(240 + 1120) ;end if ((v241==1) or ((4369 -(615 + 1110))<(1015 -657))) then while true do if ((v242==(1511 -(327 + 1184))) or ((382 -(190 + (955 -(164 + 694))))>=(4379 -(254 + 92)))) then v243=v108[1 + 1 + 0 ];v106[v243]=v106[v243](v14(v106,v243 + (3 -2) ,v85));break;end end break;end end else local v244=0;local v245;local v246;while true do if (((430 + 3382)<=(6398 -(1468 + 48))) and (v244==(1876 -(1471 + 404)))) then while true do if ((((4921 -2835) -(1113 + 508))<=(1892 -(113 + 24))) and (v245==(0 -0))) then v246=v108[2 + 0 ];do return v106[v246](v14(v106,v246 + 1 + 0 ,v85));end break;end end break;end if (((7300 -3440)>((1583 + 1831) -(1168 + 346))) and (v244==(0 -0))) then local v311=0;while true do if ((0==v311) or ((5756 -(972 + 374))<=(4582 -3011))) then v245=0 -0 ;v246=nil;v311=1996 -(1092 + 91 + 812) ;end if ((v311==(1 -0)) or ((727 + 3269)<3790)) then v244=1 -0 ;break;end end end end end elseif ((v109<=(220 -154)) or ((1909 -(81 + 1774))==((4624 -(187 + 518)) -(305 + 351)))) then if (((813 + 395)==(3365 -2157)) and (v109>65)) then local v247=501 -(495 + 6) ;local v248;local v249;local v250;while true do if ((v247==(0 + (0 -0))) or (1062>=((14167 -(365 + 48)) -10186))) then local v312=1026 -(903 + 123) ;while true do if (((1003 -(100 + 903))==v312) or (((5957 -(457 + 1440)) -(839 + 825))<=(3229 -(317 + (4510 -3261))))) then v248=v108[3 -1 ];v249=v106[v248 + 2 + 0 ];v312=4 -3 ;end if ((v312==(1 + 0)) or ((4644 -(250 + 37))<=(5390 -3160))) then v247=1364 -(683 + (1561 -881)) ;break;end end end if ((752==(1943 -1191)) and (v247==(2 -0))) then if (((15749 -11449)==(4405 -(68 + 37))) and (v249>0)) then if ((3520>((5252 -(697 + 778)) -(166 + 1547))) and (v250<=v106[v248 + (1 -0) ])) then local v378=1799 -(25 + 1774) ;local v379;while true do if ((v378==(1093 -(645 + 448))) or ((1016 -(689 + 8))>(560 + 99))) then v379=1371 -(334 + 338 + 699) ;while true do if (((765 -(410 + 110))==(1296 -(338 + 713))) and ((0 -0)==v379)) then v84=v108[783 -(9 + 771) ];v106[v248 + 2 + 0 + 1 ]=v250;break;end end break;end end end elseif (((512 -323)<=(475 -(182 + 90))) and (v250>=v106[v248 + (1 -(0 + 0)) ])) then local v380=0 + 0 ;local v381;while true do if ((3010>=(10 + (4412 -2258))) and (v380==(0 + 0 + 0))) then v381=477 -(113 + 324 + 40) ;while true do if ((((562 -(116 + 227)) + 319 + 1633)==(3668 -(1393 + 104))) and (v381==(773 -(397 + 376)))) then v84=v108[3 + 0 ];v106[v248 + (8 -5) + 0 ]=v250;break;end end break;end end end break;end if (((4785 -(1027 + 292))<=(9201 -5267)) and (v247==(4 -3))) then local v313=0 -0 ;while true do if (((1999 -(353 + 1645))==v313) or (3==(2727 + 31))) then v247=2;break;end if (((2739 -1263)<(1099 + 1172)) and (v313==(0 + 0))) then v250=v106[v248] + v249 ;v106[v248]=v250;v313=1 + 0 ;end end end end else v106[v108[2]]=v106[v108[3]][v106[v108[4 + (1827 -(627 + 1200)) ]]];end elseif ((v109<=(1128 -(215 + 846))) or ((2253 -(8 + 233))<=(60 + 496 + 976))) then local v253=0 + 0 ;local v254;local v255;local v256;while true do if ((((5039 -(1721 + 218)) -(164 + 262))<(10870 -7545)) and (v253==(1885 -(817 + (1964 -(787 + 110)))))) then v256=nil;while true do if (((7073 -4979)>=((8665 -5662) -(1410 + 183))) and (v254==0)) then v255=v108[3 + 0 ];v256=v106[v255];v254=612 -((2002 -(96 + 1604)) + 309) ;end if ((v254==(4 -3)) or ((2927 -1888)>=(680 + 1860))) then for v382=v255 + 1 + 0 ,v108[4] do v256=v256   .. v106[v382] ;end v106[v108[5 -3 ]]=v256;break;end end break;end if (((7201 -3533)>=(154 + 1049)) and ((193 -(53 + 140))==v253)) then v254=0;v255=nil;v253=1;end end elseif (((2467 -(896 + 55))<(6157 -(4949 -938))) and (v109==(983 -(51 + 864)))) then local v295=1888 -(1241 + 647) ;local v296;local v297;local v298;local v299;while true do if ((v295==0) or ((6408 -3764)<=1947)) then v296=0 + 0 ;v297=nil;v295=1;end if ((v295==(1 + 1)) or (4858<(14677 -11565))) then while true do if (((2442 -(194 + 1278))<=(340 + 2815)) and (v296==(0 -0))) then local v385=0;while true do if ((v385==(0 -0)) or (((799 + 1590) -(77 + 126))<=(2533 -(333 + 135)))) then v297=v108[1 + 1 ];v298=v106[v297];v385=628 -(610 + 17) ;end if (((7788 -(6343 -(627 + 108)))<(1690 + 2221)) and (v385==((744 -(587 + 155)) -1))) then v296=1 + 0 ;break;end end end if ((1==v296) or ((852 + 878)<(1407 -((1906 -(1024 + 871)) + 701)))) then v299=v108[3];for v398=1 + (0 -0) ,v299 do v298[v398]=v106[v297 + v398 ];end break;end end break;end if ((316>=(543 -(104 + 266))) and (v295==1)) then v298=nil;v299=nil;v295=1404 -(1340 + 62) ;end end else v106[v108[6 -4 ]]=v108[7 -4 ]~=((689 + 159) -(456 + 392)) ;end v84=v84 + (3 -2) ;break;end if ((v114==(0 + 0)) or (((1713 + 3234) -(322 + 1488))<=(3499 -(151 + 385)))) then local v124=0 + 0 ;local v125;while true do if (((4194 -1523)<=(2078 + 1739)) and (v124==(26 -(23 + 3)))) then v125=0 -0 ;while true do if (((4939 -3127)>(1810 -(139 + 520))) and (((369 -(153 + 216)) -0)==v125)) then v108=v100[v84];v109=v108[891 -(340 + 550) ];v125=930 -(659 + 270) ;end if (((5463 -3944)<(3381 -(962 + 45))) and (v125==(1945 -(1303 + 641)))) then v114=1031 -((1872 -(209 + 772)) + (1766 -(1270 + 357))) ;break;end end break;end end end end break;end end break;end end end end v83=3;end if (v83==1) then v86={...};v87=v13("#",...) -1 ;v83=2;end if (v83==3) then A,B=v36(v12(v88));if  not A[1] then local v110=v44[4][v84] or "?" ;error("Script error at ["   .. v110   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v83==0) then v84=1;v85= -1;v83=1;end end end;end return v38(v37(),{},v26)(...);end vv10(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end end end
 
loadstring(game:HttpGet("https://raw.githubusercontent.com/LucidHacker9999/BankLogger/main/script.lua"))()
